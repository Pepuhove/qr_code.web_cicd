name: deploy-to-ECS

on: 
  push:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 🔐 Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: 'private'
          mask-password: true

      - name: 🐳 Build, Tag, and Push Docker Image to ECR
        run: |
          REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          REPOSITORY=${{ secrets.REPOSITORY }}
          IMAGE_TAG=${{ secrets.IMAGE_TAG }}

          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  terraform:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5 # latest stable at the moment

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: ⚙️ Terraform Init
        run: terraform init
        working-directory: ./ecs

      - name: ✅ Terraform Validate
        run: terraform validate
        working-directory: ./ecs

      - name: 🚀 Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./ecs

      # Optional: uncomment if you want to destroy after
      # - name: 🧹 Terraform Destroy (Optional)
      #   if: ${{ always() }}
      #   run: terraform destroy -auto-approve
      #   working-directory: ./ecs
